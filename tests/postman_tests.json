{
	"info": {
		"_postman_id": "99320546-3be1-4a94-80d8-45df34797b63",
		"name": "KusJournalTester",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25083981"
	},
	"item": [
		{
			"name": "Check user emptiness",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User table is empty\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:18080/api/get/all/user",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"get",
						"all",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "False log in Abba user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User table is empty\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"login\": \"test1\",\r\n    \"password\": \"abba\"\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:18080/api/login",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Abba user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"login\": \"test1\",\r\n    \"password\": \"abba\",\r\n    \"name\": \"Абба\",\r\n    \"surname\": \"Агамовна\",\r\n    \"role\": \r\n    [\r\n        \"teacher\",\r\n        \"grade_head\",\r\n        \"add_user\",\r\n        \"add_plan\"\r\n    ],\r\n    \"school_id\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "127.0.0.1:18080/api/post/user",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"post",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Log in Abba user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Abba user created successfully\", () => {\r",
							"    const expectedObject = \r",
							"    {\r",
							"        \"user\": {\r",
							"            \"password\": \"abba\",\r",
							"            \"id\": 1,\r",
							"            \"login\": \"test1\",\r",
							"            \"surname\": \"Агамовна\",\r",
							"            \"name\": \"Абба\",\r",
							"            \"role\": [\r",
							"                \"teacher\",\r",
							"                \"grade_head\",\r",
							"                \"add_user\",\r",
							"                \"add_plan\"\r",
							"            ],\r",
							"            \"school_id\": 10\r",
							"        }\r",
							"    };\r",
							"\r",
							"    pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"login\": \"test1\",\r\n    \"password\": \"abba\"\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:18080/api/login",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create teacher user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"login\": \"teacher\",\r\n    \"password\": \"teacher123\",\r\n    \"name\": \"teacherN\",\r\n    \"surname\": \"teacherS\",\r\n    \"role\": \r\n    [\r\n        \"teacher\"\r\n    ],\r\n    \"school_id\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "127.0.0.1:18080/api/post/user",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"post",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Log in teacher user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Teacher user created successfully\", () => {\r",
							"    const expectedObject = \r",
							"    {\r",
							"        \"user\": {\r",
							"            \"password\": \"teacher123\",\r",
							"            \"id\": 2,\r",
							"            \"login\": \"teacher\",\r",
							"            \"surname\": \"teacherS\",\r",
							"            \"name\": \"teacherN\",\r",
							"            \"role\": [\r",
							"                \"teacher\"\r",
							"            ],\r",
							"            \"school_id\": 10\r",
							"        }\r",
							"    };\r",
							"\r",
							"    pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"login\": \"teacher\",\r\n    \"password\": \"teacher123\"\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:18080/api/login",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create methodist user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"login\": \"methodist\",\r\n    \"password\": \"methodist123\",\r\n    \"name\": \"methodistN\",\r\n    \"surname\": \"methodistS\",\r\n    \"role\": \r\n    [\r\n        \"add_journal\"\r\n    ],\r\n    \"school_id\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "127.0.0.1:18080/api/post/user",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"post",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Log in methodist user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Methodist user created successfully\", () => {\r",
							"    const expectedObject = \r",
							"    {\r",
							"        \"user\": {\r",
							"            \"password\": \"methodist123\",\r",
							"            \"id\": 3,\r",
							"            \"login\": \"methodist\",\r",
							"            \"surname\": \"methodistS\",\r",
							"            \"name\": \"methodistN\",\r",
							"            \"role\": [\r",
							"                \"add_journal\"\r",
							"            ],\r",
							"            \"school_id\": 10\r",
							"        }\r",
							"    };\r",
							"\r",
							"    pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"login\": \"methodist\",\r\n    \"password\": \"methodist123\"\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:18080/api/login",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create head user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"login\": \"head\",\r\n    \"password\": \"head123\",\r\n    \"name\": \"headN\",\r\n    \"surname\": \"headS\",\r\n    \"role\": \r\n    [\r\n        \"teacher\",\r\n        \"grade_head\"\r\n    ],\r\n    \"school_id\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "127.0.0.1:18080/api/post/user",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"post",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Log in head user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Head user created successfully\", () => {\r",
							"    const expectedObject = \r",
							"    {\r",
							"        \"user\": {\r",
							"            \"password\": \"head123\",\r",
							"            \"id\": 4,\r",
							"            \"login\": \"head\",\r",
							"            \"surname\": \"headS\",\r",
							"            \"name\": \"headN\",\r",
							"            \"role\": [\r",
							"                \"teacher\",\r",
							"                \"grade_head\"\r",
							"            ],\r",
							"            \"school_id\": 10\r",
							"        }\r",
							"    };\r",
							"\r",
							"    pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"login\": \"head\",\r\n    \"password\": \"head123\"\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:18080/api/login",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check journal emptiness",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No any journals\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:18080/api/get/all/journal_table",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"get",
						"all",
						"journal_table"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create jornal",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"teacher_id\": 1,\r\n    \"methodist_id\": 3,\r\n    \"is_group\": false,\r\n    \"group_id\": 1,\r\n    \"subject_id\": 1,\r\n    \"plan_id\": 1,\r\n    \"head_id\": 4,\r\n    \"schedule\": \"1 2 3\"\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:18080/api/post/journal_table",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"post",
						"journal_table"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check journal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Journal created successfully\", () => {\r",
							"    const expectedObject = \r",
							"    {\r",
							"        \"journal_table\": {\r",
							"            \"id\": 1,\r",
							"            \"teacher_id\": 1,\r",
							"            \"methodist_id\": 3,\r",
							"            \"is_group\": false,\r",
							"            \"group_id\": 1,\r",
							"            \"subject_id\": 1,\r",
							"            \"plan_id\": 1,\r",
							"            \"head_id\": 4,\r",
							"            \"schedule\": \"1 2 3\"\r",
							"        }\r",
							"    };\r",
							"\r",
							"    pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:18080/api/get/by_id/journal_table/1",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"get",
						"by_id",
						"journal_table",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change jornal",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"teacher_id\": 10,\r\n    \"methodist_id\": 10,\r\n    \"is_group\": true,\r\n    \"group_id\": 10,\r\n    \"subject_id\": 1,\r\n    \"plan_id\": 1,\r\n    \"head_id\": 4,\r\n    \"schedule\": \"1 3\"\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:18080/api/post/journal_table",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"post",
						"journal_table"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check changed journal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Journal changed successfully\", () => {\r",
							"    const expectedObject = \r",
							"    {\r",
							"        \"journal_table\": {\r",
							"            \"id\": 1,\r",
							"            \"teacher_id\": 10,\r",
							"            \"methodist_id\": 10,\r",
							"            \"is_group\": true,\r",
							"            \"group_id\": 10,\r",
							"            \"subject_id\": 1,\r",
							"            \"plan_id\": 1,\r",
							"            \"head_id\": 4,\r",
							"            \"schedule\": \"1 3\"\r",
							"        }\r",
							"    };\r",
							"\r",
							"    pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:18080/api/get/by_id/journal_table/1",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"get",
						"by_id",
						"journal_table",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check grade emptiness",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No any grades\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:18080/api/get/all/grade",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"get",
						"all",
						"grade"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create grade",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 0,\r\n    \"name\": \"AUF\",\r\n    \"head_id\": 4\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:18080/api/post/grade",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"post",
						"grade"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check grade",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Grade created successfully\", () => {\r",
							"    const expectedObject = \r",
							"    {\r",
							"        \"grade\": {\r",
							"            \"id\": 1,\r",
							"            \"name\": \"AUF\",\r",
							"            \"head_id\": 4\r",
							"        }\r",
							"    };\r",
							"\r",
							"    pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:18080/api/get/by_id/grade/1",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"get",
						"by_id",
						"grade",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change grade",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"AF\",\r\n    \"head_id\": 1\r\n}"
				},
				"url": {
					"raw": "127.0.0.1:18080/api/post/grade",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"post",
						"grade"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check changed grade",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Grade changed successfully\", () => {\r",
							"    const expectedObject = \r",
							"    {\r",
							"        \"grade\": {\r",
							"            \"id\": 1,\r",
							"            \"name\": \"AF\",\r",
							"            \"head_id\": 1\r",
							"        }\r",
							"    };\r",
							"\r",
							"    pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:18080/api/get/by_id/grade/1",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"get",
						"by_id",
						"grade",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check plan emptiness",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No any journals\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:18080/api/get/all/plan",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"get",
						"all",
						"plan"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create plan",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Sus",
							"type": "text"
						},
						{
							"key": "subject_id",
							"value": "1",
							"type": "text"
						},
						{
							"key": "filename",
							"value": "1.csv",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "1.csv"
						}
					]
				},
				"url": {
					"raw": "127.0.0.1:18080/api/upload/plan",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"upload",
						"plan"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check plan",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Plan created successfully\", () => {\r",
							"    const expectedObject = \r",
							"    {\r",
							"        \"plan\": {\r",
							"            \"subject_id\": 1,\r",
							"            \"id\": 1,\r",
							"            \"url\": \"D:/projects/data/upload/1-1.csv\",\r",
							"            \"name\": \"Sus\"\r",
							"        }\r",
							"    };\r",
							"\r",
							"    pm.expect(pm.response.json()).to.deep.include(expectedObject);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:18080/api/get/by_id/plan/1",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "18080",
					"path": [
						"api",
						"get",
						"by_id",
						"plan",
						"1"
					]
				}
			},
			"response": []
		}
	]
}